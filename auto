#!/bin/bash 
YELLOW='\e[1;33m'
NC='\e[0m' # No Color
CONFIRM='No'
LOGPATH='/var/www/log'
GITPATH='git url'
VHOSTFILE='/etc/httpd/conf.d/vhost.conf'
SVHOSTFILE='/etc/httpd/conf.d/ssl.conf'

while getopts c:l:d:u:p: option 
do 
 case "${option}" 
 in 
 c) DOMAIN=${OPTARG};;
 l) LOGDIR=${OPTARG};;
 d) DATABASE=${OPTARG};;
 u) DBSUSER=${OPTARG};;
 p) PASSWDDB=${OPTARG};;
 esac 
done
echo -e "Please confirm the following inputs"
	echo -e "-------------------------------------------------------------------"
	echo -e "\tDomain\t\t: ${YELLOW} ${DOMAIN} ${NC}" 
	echo -e "\tLog Directory\t: ${YELLOW} ${LOGDIR} ${NC}"
	echo -e "\tDatabase\t: ${YELLOW} ${DATABASE} ${NC}" 
	echo -e "\tDatabase User\t: ${YELLOW} ${DBSUSER} ${NC}" 
  echo -e "\tDB UserPasswrd\t: ${YELLOW} ${PASSWDDB} ${NC}" 
	echo -e "-------------------------------------------------------------------"
	echo 
	read -p "Are you sure? (y/n)" -n 1 answer
	echo 
	case ${answer:0:1} in
		y|Y) CONFIRM='Yes';;
		*) [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 ;;
	esac
  
  DIRECTORY="${LOGPATH}/${LOGFILE}"
	echo
	echo -e "${YELLOW}Creating Log Directory__${NC}"
	echo

	if [ ! -d "$DIRECTORY" ]; then
		mkdir "${DIRECTORY}"
		if [ -d "$DIRECTORY" ]; then
			echo -e "\tLog Directory Created"
		fi
	else
		echo -e "\tLog Directory already exist"
	fi
	echo
  
  echo -e "${YELLOW}Cloning Git Repo__${NC}"
	echo 
	git clone ${GITPATH} /var/www/html/${DOMAIN}
	echo
  
  echo
	echo -e "${YELLOW}Creating Virtual Host__${NC}"
	echo

	if grep -q ${DOMAIN} "${VHOSTFILE}"; then
		echo -e "\tVistual Host Already Created"
	else
		echo "" >> ${VHOSTFILE}
		echo "" >> ${VHOSTFILE}
		echo "<VirtualHost ${DOMAIN}:80>" >> ${VHOSTFILE}
		echo "DocumentRoot /var/www/html/${DOMAIN}" >> ${VHOSTFILE}
		echo "Servername ${DOMAIN}" >> ${VHOSTFILE}
		echo "ServerAlias www.${DOMAIN}" >> ${VHOSTFILE}
		echo "Redirect permanent / https://${DOMAIN}/" >> ${VHOSTFILE}
		echo "ErrorLog /var/www/logs/${LOGFILE}/error_log" >> ${VHOSTFILE}
		echo "CustomLog /var/www/logs/${LOGFILE}/access_log common" >> ${VHOSTFILE}
		echo "php_flag display_errors off" >> ${VHOSTFILE}
		echo "</VirtualHost>" >> ${VHOSTFILE}
		if grep -q ${DOMAIN} "${VHOSTFILE}"; then
			echo -e "\tVistual Host Created"
		fi
	fi
  
  echo
	echo -e "${YELLOW}Creating Secure Virtual Host__${NC}"
	echo

	if grep -q ${DOMAIN} "${SVHOSTFILE}"; then
		echo -e "\tSecure Vistual Host Already Created"
	else
		echo "" >> ${SVHOSTFILE}
		echo "" >> ${SVHOSTFILE}
		echo "<VirtualHost ${DOMAIN}:443>" >> ${SVHOSTFILE}
		echo "DocumentRoot /var/www/html/${DOMAIN}" >> ${SVHOSTFILE}
		echo "Servername ${DOMAIN}" >> ${SVHOSTFILE}
		echo "ServerAlias www.${DOMAIN}" >> ${SVHOSTFILE}
		echo "SSLEngine on" >> ${SVHOSTFILE}
		echo "SSLCertificateFile /etc/pki/tls/certs/STAR_com.crt" >> ${SVHOSTFILE}
		echo "SSLCertificateKeyFile /etc/pki/tls/private/wildcard.com_private.key" >> ${SVHOSTFILE}
		echo "SSLCertificateChainFile /etc/pki/tls/certs/STAR_com.ca-bundle" >> ${SVHOSTFILE}
		echo "ErrorLog /var/www/logs/${LOGFILE}/error_log" >> ${SVHOSTFILE}
		echo "CustomLog /var/www/logs/${LOGFILE}/access_log common" >> ${SVHOSTFILE}
		echo "php_flag display_errors off" >> ${SVHOSTFILE}
		echo "php_value max_input_vars 10000" >> ${SVHOSTFILE}
		echo "</VirtualHost>" >> ${SVHOSTFILE}
		if grep -q ${DOMAIN} "${SVHOSTFILE}"; then
			echo -e "\tSecure Vistual Host Created"
		fi

	fi
  
  echo
	echo -e "${YELLOW}Creating Database, User and assign Privilages__${NC}"
	echo
    
	mysql --login-path=local -e "CREATE DATABASE ${DATABASE} /*\!40100 DEFAULT CHARACTER SET utf8 */;"

	ISDB=`mysqlshow --login-path=local ${DATABASE}| grep -v Wildcard | grep -o ${DATABASE}`
	if [ "$ISDB" == "${DATABASE}" ]; then
	    echo -e "\tDatabase Created"
	fi

	ISMSUSER="$(mysql --login-path=local -sse "SELECT EXISTS(SELECT 1 FROM mysql.user WHERE user = '$MSUSER')")"
	if [ "$ISMSUSER" = 1 ]; then
		echo -e "\tDatabase User already available"
	else
	  	mysql --login-path=local -e "CREATE USER ${DBSUSER}@localhost IDENTIFIED BY '${PASSWDDB}';"
		ISMSUSER="$(mysql --login-path=local -sse "SELECT EXISTS(SELECT 1 FROM mysql.user WHERE user = '$DBSUSER')")"
		if [ "$ISMSUSER" = 1 ]; then
			echo -e "\tDatabase User has been created."
		fi	
	fi

    
   mysql --login-path=local -e "GRANT CREATE TEMPORARY TABLES, DELETE, EXECUTE, INSERT, LOCK TABLES, SELECT, SHOW VIEW, TRIGGER, UPDATE ON ${DATABASE}.* TO '${DBSUSER}'@'localhost';"
   echo -e "\tPrivilages Given"
   mysql --login-path=local -e "FLUSH PRIVILEGES;"
   echo -e "\tPrivilages Re-loaded"
  
  
